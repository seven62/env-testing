# this workflow will validate mkdocs functionality
# - pull request opened
# - check dir with change(s)
# - test `mkdocs build` cmd
---


name: Build Checks

on:
  pull_request:
    types: [ assigned, opened, synchronize, reopened ]

jobs:
  
  # detect what course directory contains changes
  detect-change:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      dak: ${{ steps.filter.outputs.dak }}
      esa: ${{ steps.filter.outputs.esa }}
      # <COURSE_DIR>: ${{ steps.filter.outputs.<COURSE_DIR> }}
      # to add course, copy above to list
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        ref: 'main'
        filters: |
          dak:
            - 'dak/**'
          esa:
            - 'esa/**'
        #  <COURSE_DIR>:
        #    - '<COURSE_DIR>/**'
        # to add course, copy above to list

  # verify successful mkdocs build for DAK
  dak-validate:
    needs: detect-change
    if: ${{ needs.detect-change.outputs.dak == 'true' }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/elastic/mkdocs-material-insiders-ia:education
      credentials:
        username: ${{ secrets.CUSTOM_GHCR_USERNAME}}
        password: ${{ secrets.CUSTOM_GHCR_TOKEN }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Clear site dir
      run: rm -rf ./site/*
    - name: Run build command
      run: 'mkdocs build -f mkdocs-dak.yml'
    - run: |
        echo 'Course built successfully!'

  # DAK LOCALIZATION
  # - verify successful build for DAK-JP
  dak-jp-validate:
    needs: detect-change
    if: ${{ needs.detect-change.outputs.dak == 'true' }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/elastic/mkdocs-material-insiders-ia:education
      credentials:
        username: ${{ secrets.CUSTOM_GHCR_USERNAME}}
        password: ${{ secrets.CUSTOM_GHCR_TOKEN }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Clear site dir
      run: rm -rf ./site/*
    - name: Run build command
      run: 'mkdocs build -f mkdocs-dak-jp.yml'
    - run: |
        echo 'Japanese localization built successfully!'
    

  # verify successful mkdocs build for esa
  esa-validate:
    needs: detect-change
    if: ${{ needs.detect-change.outputs.esa == 'true' }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/elastic/mkdocs-material-insiders-ia:education
      credentials:
        username: ${{ secrets.CUSTOM_GHCR_USERNAME}}
        password: ${{ secrets.CUSTOM_GHCR_TOKEN }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Clear site dir
      run: rm -rf ./site/*
    - name: Run build command
      run: 'mkdocs build -f mkdocs-esa.yml'
    - run: |
        echo 'Course built successfully!'






#############  PREFLIGHT TEMPLATE  #############
#   - copy the below workflow and paste above
#   - update all "<COURSE_DIR>" to match dir
#   - reference above (production) examples
################################################


  # # verify successful mkdocs build for <COURSE_DIR>
  # <COURSE_DIR>-validate:
  #   needs: detect-change
  #   if: ${{ needs.detect-change.outputs.<COURSE_DIR> == 'true' }}
  #   runs-on: ubuntu-latest
  #   container:
  #     image: ghcr.io/elastic/mkdocs-material-insiders-ia:education
  #     credentials:
  #       username: ${{ secrets.CUSTOM_GHCR_USERNAME}}
  #       password: ${{ secrets.CUSTOM_GHCR_TOKEN }}
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #   - name: Clear site dir
  #     run: rm -rf ./site/*
  #   - name: Run build command
  #     run: 'mkdocs build -f mkdocs-<COURSE_DIR>.yml'
  #   - run: |
  #       echo 'Course built successfully!'
